/*
Given a string s, find the length of the longest 
substring
 without repeating characters.
 */

class Solution {
    public int lengthOfLongestSubstring(String s) {
        int length = 0;        
        int n=0;
        List<Character> arr = new ArrayList<>();  
        if(s.length() <=1){
            return s.length();
        }
        
    outer:    while(n<s.length()){
            for(int i=0;i< arr.size();i++){        
                if(arr.get(i) == s.charAt(n)){
                    for(int j =0;j<=i;j++){
                    arr.remove(0);            //aab
                    }
                    break outer;
                }    
            }
            arr.add(s.charAt(n));
            length+=1;
            n++;
        }  
        while(n<s.length()){
            for(int i=0;i<arr.size();i++){
                if(arr.get(i) == s.charAt(n)){
                    if(length<arr.size()){
                        length= arr.size();
                    }
                    for(int j =0;j<=i;j++){
                    arr.remove(0);
                    }
                    System.out.println(length);
                }
            }
            arr.add(s.charAt(n));
            
            n++;
        } 
        if(length<arr.size())
            length= arr.size();
    return length;      
    }
}
