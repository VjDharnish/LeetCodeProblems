/*
You are given an m x n binary matrix grid. An island is a group of 1's (representing land) connected 4-directionally (horizontal or vertical.) 
You may assume all four edges of the grid are surrounded by water.
The area of an island is the number of cells with a value 1 in the island.
Return the maximum area of an island in grid. If there is no island, return 0.
*/

class Solution {
    public int islandArea(int[][]grid,int row,int col){
        if(row<0||col<0||row>=grid.length||col>=grid[row].length||grid[row][col]==0)
        return 0;
        
        if(grid[row][col] == -1)
        return 0;
        int area =1;
        grid[row][col] =-1;

        area+=islandArea(grid,row-1,col);
        area+=islandArea(grid,row+1,col);
        area+=islandArea(grid,row,col-1);
        area+=islandArea(grid,row,col+1);
        return area;
    }
    public int maxAreaOfIsland(int[][] grid) {
       int maxArea= 0;
       for(int row  =0;row<grid.length;row++){
           for(int col =0;col<grid[row].length;col++){
               if(grid[row][col] == 1){
                   int  area = islandArea(grid,row,col);
                   if(maxArea<area)
                   maxArea=area;
               }
           }
       } 
       return maxArea;
    }
}
