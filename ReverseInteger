/*
Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range 
[-231, 231 - 1], then return 0.
Assume the environment does not allow you to store 64-bit integers (signed or unsigned).
*/

class Solution {
    public int reverse(int x) {
        long lower=(long) Integer.MIN_VALUE;
        long higher= (long)Integer.MAX_VALUE;
        long l =(long) x;
        long sum =0;
        while(l!=0){
            long temp = l%10;
            sum = sum*10+temp;
            l/=10;
            }
        return (sum>lower && sum<higher)?(int)sum:0;
    }
}
